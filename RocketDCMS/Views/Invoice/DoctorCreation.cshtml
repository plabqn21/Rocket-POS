@model RamsoftBD.ModelView.DoctorViewModelForInvoice

@{
   ViewBag.Title = "Create"; 
}

<h2 class="bg" style="background-color:#293955;color:white">Doctors</h2>

<div class="row">


    <div class="col-lg-8">

        <table id="myTable" class="display">
            <thead>
                <tr>

                    <th>
                        @Html.DisplayName("Name")
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Qualification)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Hospital)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Type)
                    </th>
                    <th>
                        @Html.DisplayName("Fee")
                    </th>
                    <th>
                        @Html.DisplayName("Fee(OP)")
                    </th>
                    <th>
                        @Html.DisplayName("OP Duration")
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Doctors)
                {
                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => item.DoctorName)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Qualification)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Hospital)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Type)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NewPatientFee)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OldPatientFee)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OldPatientFeeDuration)
                            @Html.DisplayName("Month")
                        </td>
                        <td>
                            <P>
                                @Html.ActionLink("Submit", "DoctorEdit", new { id = item.Id, Patient_Id=Model.Patient_Id}, htmlAttributes: new { @class = "btn btn-info btn-xs" })
                            </P>
                        </td>
                    </tr>
                }
            </tbody>
        </table>



    </div>
    <div class="col-lg-4" style="border-style:solid">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div>
                    <h2 class="bg" style="background-color:#293955;color:white;text-align:center"> New Doctor</h2>
                </div>
                <br />

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.DoctorName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DoctorName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Qualification, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Qualification, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Hospital, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Hospital, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Hospital, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownList("Type", new List<SelectListItem>
                   {
                       new SelectListItem{ Text="Internal", Value = "Internal" },
                       new SelectListItem{ Text="Extarnal", Value = "Extarnal" },

                    },"Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.TextAreaFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Branch", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownList("BranchId", null, "Select", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("New Patient Fee", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.NewPatientFee, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NewPatientFee, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Old Patient Fee", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.OldPatientFee, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OldPatientFee, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Old Patient Duration", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownList("OldPatientFeeDuration", new List<SelectListItem>
                   {
                       new SelectListItem{ Text="One Month", Value = "1" },
                       new SelectListItem{ Text="Two Month", Value = "2" },
                        new SelectListItem{ Text="Three Month", Value = "3" },
                         new SelectListItem{ Text="Four Month", Value = "4" },
                          new SelectListItem{ Text="Five Month", Value = "5" },
                           new SelectListItem{ Text="Six Month", Value = "6" },

                    },"Select Duration" ,new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OldPatientFeeDuration, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Commission(%)", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.CommissionRate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CommissionRate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    <div class="col-md-offset-2 col-md-9" style="text-align:right">
                        <input type="submit" value="Next >>" class="btn btn-warning" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $('#myTable').DataTable();
        });
    </script>

}
