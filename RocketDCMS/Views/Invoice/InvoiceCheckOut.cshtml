@model RamsoftBD.ModelView.InvoiceCheckoutViewModel

@{
    ViewBag.Title = "InvoiceCheckOut";
}

<h2 class="bg" style="background-color:#293955;color:white;text-align:center">Checkout Details</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Doctor_Id)
        @Html.HiddenFor(model => model.Patient_Id)
        @Html.HiddenFor(model => model.OrderNumber)
        @Html.HiddenFor(model => model.Branch_Id)
        @Html.HiddenFor(model => model.Bill_Generator)

        <div class="row">


            <div class="col-lg-6">

                <div class="form-group">
                    @Html.Label("Invoice Date", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Payment Mode", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownList("PaymentMode", new List<SelectListItem>
             {
                 new SelectListItem{ Text="Due Payment", Value = "Due Payment" },
                 new SelectListItem{ Text="Full Payment", Value = "Full Payment" },

              }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Payment Method", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownList("PaymentMethod", new List<SelectListItem>
            {
            new SelectListItem{ Text="Cash", Value = "Cash" },
            new SelectListItem{ Text="Card", Value = "Card" },
            new SelectListItem{ Text="Check", Value = "Check" },
            new SelectListItem{ Text="Mobile Money", Value = "Mobile Money" },
            new SelectListItem{ Text="Others", Value = "Others" },

            }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PaymentMethod, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Total Bill", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.TotalBill, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalBill, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Discount(%)", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Total Payable", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.TotalPayable, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalPayable, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Amount Received", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.AmountReceived, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AmountReceived, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="col-lg-6">

                <div class="form-group">
                    @Html.Label("Sample Receive Date", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.SampleReceiveDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SampleReceiveDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Sample Receive Time", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.SampleReceiveTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SampleReceiveTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Corporate Customer?", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownList("IsCorporateCustomer", new List<SelectListItem>
            {
            new SelectListItem{ Text="No", Value = "No" },
            new SelectListItem{ Text="Yes", Value = "Yes" },

            }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IsCorporateCustomer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Referel Lab", "ReferelLabId", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownList("ReferelLabId", null, "Select", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ReferelLabId, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.Label("Report Delivery Date", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.ReportDeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReportDeliveryDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Report Delivery Time", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.ReportDeliveryTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReportDeliveryTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-7" style="margin-left:372px;margin-top:70px">
                        <input type="submit" value="Save" class="btn btn-info" />
                        <input type="button" id="PrintButton" value="Print" class="btn btn-info" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/ControllerHelperScript/Invoice/InvoiceCheckOut.js"></script>


    <script>




    $('#PrintButton').click(function () {

        var Parameter = {
            OrderNumber:@Model.OrderNumber,
            ReportName:"Invoice",


        }
        var pathArray = window.location.href.split('/');
        var protocol = pathArray[0];
        var host = pathArray[2];

        //if (domain == "#") domain = "";
        this.baseURL = protocol + '//' + host;
        Finalurl = this.baseURL + "/ReportViewer.aspx";
        var url = Finalurl + "?parameters=" + JSON.stringify(Parameter);
        window.open(url, '_blank');

    })





    </script>
}
