@model RamsoftBD.ModelView.TestViewModel

@{
   ViewBag.Title = "Create"; 
}

<h2 class="bg" style="background-color:#293955;color:white">Tests</h2>

<div class="row">


    <div class="col-lg-8">

        <table id="myTable" class="display">
            <thead>

                <tr>

                    <th>
                        @Html.DisplayNameFor(model => model.TestName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TestCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Discount)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.ReferenceValueMale)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ReferenceValueFeMale)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ReferenceValueChildren)
                    </th>
                    <th></th>
                 
                  
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Tests)
                {
                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => item.TestName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TestCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Discount)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.ReferenceValueFeMale)
                            @Html.DisplayFor(modelItem => item.Unit.UnitName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReferenceValueFeMale)
                            @Html.DisplayFor(modelItem => item.Unit.UnitName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReferenceValueChildren)
                            @Html.DisplayFor(modelItem => item.Unit.UnitName)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-info btn-xs" })
                      
                     
                       
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger btn-xs" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>

    <div class="col-lg-4">
        @using (Html.BeginForm())
        {@Html.AntiForgeryToken() <div class="form-horizontal" style="border-style:solid">
            <div>
                <h2 class="bg" style="background-color:#293955;color:white;text-align:center"> Edit Test</h2>
            </div>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(x=>x.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.TestName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.TestName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TestName, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.DropDownList("DepartmentId", null, "Select", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SpecimenId, "Specimen", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.DropDownList("SpecimenId", null, "Select", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SpecimenId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReferenceValueMale, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ReferenceValueMale, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReferenceValueMale, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReferenceValueFeMale, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ReferenceValueFeMale, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReferenceValueFeMale, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReferenceValueChildren, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ReferenceValueChildren, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReferenceValueChildren, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Unit", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.DropDownList("UnitId", null, "Select", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-9" style="text-align:right">
                    <input type="submit" value="Update" class="btn btn-warning" />
                </div>
            </div>
        </div>

    }

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
   $(document).ready( function () {
    $('#myTable').DataTable();
    } );
    </script>
}